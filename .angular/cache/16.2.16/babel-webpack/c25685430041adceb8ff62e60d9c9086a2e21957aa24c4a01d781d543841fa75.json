{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let AnimationService = /*#__PURE__*/(() => {\n  class AnimationService {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.isAOSInitialized = false;\n      this.isBrowser = isPlatformBrowser(this.platformId);\n    }\n    /**\n     * Initialize AOS (Animate On Scroll) library\n     */\n    initializeAOS() {\n      if (!this.isBrowser) return;\n      // Load AOS if not already loaded\n      if (!this.isAOSLoaded()) {\n        this.loadAOSLibrary().then(() => {\n          this.setupAOS();\n        });\n      } else {\n        this.setupAOS();\n      }\n    }\n    /**\n     * Setup AOS with custom configuration\n     */\n    setupAOS() {\n      if (typeof AOS !== 'undefined' && !this.isAOSInitialized) {\n        AOS.init({\n          duration: 800,\n          easing: 'ease-in-out',\n          once: true,\n          offset: 100,\n          delay: 0,\n          disable: false,\n          startEvent: 'DOMContentLoaded',\n          initClassName: 'aos-init',\n          animatedClassName: 'aos-animate',\n          useClassNames: false,\n          disableMutationObserver: false,\n          debounceDelay: 50,\n          throttleDelay: 99\n        });\n        this.isAOSInitialized = true;\n        console.log('AOS initialized successfully');\n      }\n    }\n    /**\n     * Refresh AOS animations\n     */\n    refreshAOS() {\n      if (!this.isBrowser || typeof AOS === 'undefined') return;\n      setTimeout(() => {\n        AOS.refresh();\n      }, 100);\n    }\n    /**\n     * Refresh AOS with delay\n     */\n    refreshAOSWithDelay(delay = 500) {\n      if (!this.isBrowser) return;\n      setTimeout(() => {\n        this.refreshAOS();\n      }, delay);\n    }\n    /**\n     * Disable AOS animations\n     */\n    disableAOS() {\n      if (typeof AOS !== 'undefined') {\n        AOS.init({\n          disable: true\n        });\n      }\n    }\n    /**\n     * Enable AOS animations\n     */\n    enableAOS() {\n      if (typeof AOS !== 'undefined') {\n        AOS.init({\n          disable: false\n        });\n        this.refreshAOS();\n      }\n    }\n    /**\n     * Check if AOS library is loaded\n     */\n    isAOSLoaded() {\n      return typeof AOS !== 'undefined';\n    }\n    /**\n     * Dynamically load AOS library\n     */\n    loadAOSLibrary() {\n      return new Promise((resolve, reject) => {\n        if (!this.isBrowser) {\n          resolve();\n          return;\n        }\n        // Load AOS CSS\n        const aosCSS = document.createElement('link');\n        aosCSS.rel = 'stylesheet';\n        aosCSS.href = 'https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.css';\n        aosCSS.integrity = 'sha512-1cK78a1o+ht2JcaW6g8OXYwqpev9+6GqOkz9xmBN9iUUhIndKtxwILGWYOSibOKjLsEdjyjZvYDq/cZwNeak0w==';\n        aosCSS.crossOrigin = 'anonymous';\n        document.head.appendChild(aosCSS);\n        // Load AOS JavaScript\n        const aosScript = document.createElement('script');\n        aosScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/aos/2.3.4/aos.js';\n        aosScript.integrity = 'sha512-A7AYk1fGKX6S2SsHywmPkrnzTZHrgiVT7GcQkLGDe2ev0aWb8zejytzS8wjo7PGEXKqJOrjQ4oORtnimIRZBtw==';\n        aosScript.crossOrigin = 'anonymous';\n        aosScript.async = true;\n        aosScript.onload = () => {\n          console.log('AOS library loaded successfully');\n          resolve();\n        };\n        aosScript.onerror = () => {\n          console.error('Failed to load AOS library');\n          reject(new Error('Failed to load AOS library'));\n        };\n        document.head.appendChild(aosScript);\n      });\n    }\n    // ===========================================\n    // CUSTOM ANIMATION UTILITIES\n    // ===========================================\n    /**\n     * Fade in animation\n     */\n    fadeIn(element, duration = 600, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transition = `opacity ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n      }, delay);\n    }\n    /**\n     * Fade in up animation\n     */\n    fadeInUp(element, duration = 600, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'translateY(30px)';\n      element.style.transition = `all ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'translateY(0)';\n      }, delay);\n    }\n    /**\n     * Slide in from left animation\n     */\n    slideInFromLeft(element, duration = 800, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'translateX(-50px)';\n      element.style.transition = `all ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'translateX(0)';\n      }, delay);\n    }\n    /**\n     * Slide in from right animation\n     */\n    slideInFromRight(element, duration = 800, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'translateX(50px)';\n      element.style.transition = `all ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'translateX(0)';\n      }, delay);\n    }\n    /**\n     * Scale in animation\n     */\n    scaleIn(element, duration = 500, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'scale(0.8)';\n      element.style.transition = `all ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'scale(1)';\n      }, delay);\n    }\n    /**\n     * Rotate in animation\n     */\n    rotateIn(element, duration = 600, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'rotate(-180deg)';\n      element.style.transition = `all ${duration}ms ease-out`;\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'rotate(0deg)';\n      }, delay);\n    }\n    /**\n     * Bounce in animation\n     */\n    bounceIn(element, delay = 0) {\n      if (!this.isBrowser || !element) return;\n      element.style.opacity = '0';\n      element.style.transform = 'scale(0.3)';\n      element.style.transition = 'all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55)';\n      setTimeout(() => {\n        element.style.opacity = '1';\n        element.style.transform = 'scale(1)';\n      }, delay);\n    }\n    /**\n     * Stagger animation for multiple elements\n     */\n    staggerAnimation(elements, animationType = 'fadeInUp', staggerDelay = 100) {\n      if (!this.isBrowser || !elements.length) return;\n      Array.from(elements).forEach((element, index) => {\n        const delay = index * staggerDelay;\n        switch (animationType) {\n          case 'fadeInUp':\n            this.fadeInUp(element, 600, delay);\n            break;\n          case 'slideInFromLeft':\n            this.slideInFromLeft(element, 800, delay);\n            break;\n          case 'scaleIn':\n            this.scaleIn(element, 500, delay);\n            break;\n          default:\n            this.fadeInUp(element, 600, delay);\n        }\n      });\n    }\n    /**\n     * Typing animation effect\n     */\n    typewriterAnimation(element, text, speed = 50) {\n      return new Promise(resolve => {\n        if (!this.isBrowser || !element) {\n          resolve();\n          return;\n        }\n        let i = 0;\n        element.textContent = '';\n        const typeInterval = setInterval(() => {\n          if (i < text.length) {\n            element.textContent += text.charAt(i);\n            i++;\n          } else {\n            clearInterval(typeInterval);\n            resolve();\n          }\n        }, speed);\n      });\n    }\n    /**\n     * Counter animation\n     */\n    animateCounter(element, from = 0, to, duration = 2000, suffix = '') {\n      if (!this.isBrowser || !element) return;\n      const startTime = performance.now();\n      const updateCounter = currentTime => {\n        const elapsed = currentTime - startTime;\n        const progress = Math.min(elapsed / duration, 1);\n        const easeOutQuart = 1 - Math.pow(1 - progress, 4);\n        const current = Math.floor(from + (to - from) * easeOutQuart);\n        element.textContent = current + suffix;\n        if (progress < 1) {\n          requestAnimationFrame(updateCounter);\n        }\n      };\n      requestAnimationFrame(updateCounter);\n    }\n    /**\n     * Progress bar animation\n     */\n    animateProgressBar(element, percentage, duration = 1500) {\n      if (!this.isBrowser || !element) return;\n      element.style.width = '0%';\n      element.style.transition = `width ${duration}ms ease-in-out`;\n      setTimeout(() => {\n        element.style.width = `${percentage}%`;\n      }, 100);\n    }\n    /**\n     * Parallax scrolling effect\n     */\n    initializeParallax(selector = '.parallax') {\n      if (!this.isBrowser) return;\n      const elements = document.querySelectorAll(selector);\n      const handleScroll = () => {\n        const scrollTop = window.pageYOffset;\n        elements.forEach(element => {\n          const speed = element.dataset.speed || 0.5;\n          const yPos = -(scrollTop * speed);\n          element.style.transform = `translateY(${yPos}px)`;\n        });\n      };\n      window.addEventListener('scroll', handleScroll);\n    }\n    /**\n     * Intersection Observer for triggering animations\n     */\n    observeElements(selector, callback) {\n      if (!this.isBrowser) return;\n      const elements = document.querySelectorAll(selector);\n      const observer = new IntersectionObserver(entries => {\n        entries.forEach(callback);\n      }, {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n      });\n      elements.forEach(element => observer.observe(element));\n    }\n    /**\n     * Clean up animations and observers\n     */\n    destroy() {\n      if (typeof AOS !== 'undefined') {\n        AOS.refreshHard();\n      }\n    }\n    static {\n      this.ɵfac = function AnimationService_Factory(t) {\n        return new (t || AnimationService)(i0.ɵɵinject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AnimationService,\n        factory: AnimationService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AnimationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}